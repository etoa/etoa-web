name: Deploy to Staging

on:
  workflow_run:
    workflows: ["CI build"]
    types:
      - completed

env:
  PHP_VERSION: "8.1"
  NODE_VERSION: "16.x"

jobs:
  check-secret:
    name: Check repository secrets
    runs-on: ubuntu-latest
    outputs:
      ftp-data: ${{ steps.ftp-data.outputs.defined }}
    steps:
      - id: ftp-data
        if: "${{ env.STAGING_FTP_SERVER != '' && env.STAGING_FTP_USERNAME != '' && env.STAGING_FTP_PASSWORD != ''}}"
        run: echo "::set-output name=defined::true"
        env:
          STAGING_FTP_SERVER: ${{ secrets.STAGING_FTP_SERVER }}
          STAGING_FTP_USERNAME: ${{ secrets.STAGING_FTP_USERNAME }}
          STAGING_FTP_PASSWORD: ${{ secrets.STAGING_FTP_PASSWORD }}

  deploy-staging:
    name: Deploy to staging
    runs-on: ubuntu-latest
    needs: [check-secret]
    if: (github.repository == 'etoa/etoa-web' && needs.check-secret.outputs.ftp-data == 'true')

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
      - name: Install PHP dependencies via Composer
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist  --optimize-autoloader --no-dev
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Install packages via NPM
        run: npm ci
      - name: Build assets
        run: npm run build
      - name: Sync files
        uses: SamKirkland/FTP-Deploy-Action@4.3.1
        with:
          server: ${{ secrets.STAGING_FTP_SERVER }}
          username: ${{ secrets.STAGING_FTP_USERNAME }}
          password: ${{ secrets.STAGING_FTP_PASSWORD }}
          protocol: ftps
          exclude: |
            **/.git*
            **/.git*/**
            **/node_modules/**
            **/docker/**
            public/archiv/**
            public/pub/**
            .ftpquota
            .editorconfig
            .php-cs*
            docker*
            phpstan*
